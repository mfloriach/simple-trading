// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: trade.proto

package grpc_todo

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SymbolIdTrade int32

const (
	SymbolIdTrade_AAPL SymbolIdTrade = 0
	SymbolIdTrade_NVDA SymbolIdTrade = 1
	SymbolIdTrade_TSLA SymbolIdTrade = 2
)

// Enum value maps for SymbolIdTrade.
var (
	SymbolIdTrade_name = map[int32]string{
		0: "AAPL",
		1: "NVDA",
		2: "TSLA",
	}
	SymbolIdTrade_value = map[string]int32{
		"AAPL": 0,
		"NVDA": 1,
		"TSLA": 2,
	}
)

func (x SymbolIdTrade) Enum() *SymbolIdTrade {
	p := new(SymbolIdTrade)
	*p = x
	return p
}

func (x SymbolIdTrade) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SymbolIdTrade) Descriptor() protoreflect.EnumDescriptor {
	return file_trade_proto_enumTypes[0].Descriptor()
}

func (SymbolIdTrade) Type() protoreflect.EnumType {
	return &file_trade_proto_enumTypes[0]
}

func (x SymbolIdTrade) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SymbolIdTrade.Descriptor instead.
func (SymbolIdTrade) EnumDescriptor() ([]byte, []int) {
	return file_trade_proto_rawDescGZIP(), []int{0}
}

type Trade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol SymbolIdTrade `protobuf:"varint,1,opt,name=symbol,proto3,enum=trade.SymbolIdTrade" json:"symbol,omitempty"`
	Amount int64         `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *Trade) Reset() {
	*x = Trade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trade_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trade) ProtoMessage() {}

func (x *Trade) ProtoReflect() protoreflect.Message {
	mi := &file_trade_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trade.ProtoReflect.Descriptor instead.
func (*Trade) Descriptor() ([]byte, []int) {
	return file_trade_proto_rawDescGZIP(), []int{0}
}

func (x *Trade) GetSymbol() SymbolIdTrade {
	if x != nil {
		return x.Symbol
	}
	return SymbolIdTrade_AAPL
}

func (x *Trade) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trade_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_trade_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_trade_proto_rawDescGZIP(), []int{1}
}

var File_trade_proto protoreflect.FileDescriptor

var file_trade_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x60, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x42, 0x08, 0xba, 0x48, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x1f, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x07, 0xba, 0x48, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x2a, 0x2d, 0x0a, 0x0d,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x41, 0x41, 0x50, 0x4c, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x56, 0x44, 0x41, 0x10,
	0x01, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x53, 0x4c, 0x41, 0x10, 0x02, 0x32, 0xaf, 0x01, 0x0a, 0x0c,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x03,
	0x50, 0x75, 0x74, 0x12, 0x0c, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x1a, 0x0c, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x24, 0x0a, 0x04, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x0c, 0x2e, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x1a, 0x0c, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x0a, 0x54, 0x61, 0x6b, 0x65, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x0c, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x1a, 0x0c, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x08, 0x53, 0x74, 0x6f, 0x70, 0x4c, 0x6f, 0x73, 0x65, 0x12,
	0x0c, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x1a, 0x0c, 0x2e,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x62, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x42, 0x0a, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x15, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x74, 0x6f, 0x64, 0x6f, 0xa2,
	0x02, 0x03, 0x54, 0x58, 0x58, 0xaa, 0x02, 0x05, 0x54, 0x72, 0x61, 0x64, 0x65, 0xca, 0x02, 0x05,
	0x54, 0x72, 0x61, 0x64, 0x65, 0xe2, 0x02, 0x11, 0x54, 0x72, 0x61, 0x64, 0x65, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x05, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_trade_proto_rawDescOnce sync.Once
	file_trade_proto_rawDescData = file_trade_proto_rawDesc
)

func file_trade_proto_rawDescGZIP() []byte {
	file_trade_proto_rawDescOnce.Do(func() {
		file_trade_proto_rawDescData = protoimpl.X.CompressGZIP(file_trade_proto_rawDescData)
	})
	return file_trade_proto_rawDescData
}

var file_trade_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_trade_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_trade_proto_goTypes = []any{
	(SymbolIdTrade)(0), // 0: trade.SymbolIdTrade
	(*Trade)(nil),      // 1: trade.Trade
	(*Empty)(nil),      // 2: trade.Empty
}
var file_trade_proto_depIdxs = []int32{
	0, // 0: trade.Trade.symbol:type_name -> trade.SymbolIdTrade
	1, // 1: trade.TradeService.Put:input_type -> trade.Trade
	1, // 2: trade.TradeService.Call:input_type -> trade.Trade
	1, // 3: trade.TradeService.TakeProfit:input_type -> trade.Trade
	1, // 4: trade.TradeService.StopLose:input_type -> trade.Trade
	2, // 5: trade.TradeService.Put:output_type -> trade.Empty
	2, // 6: trade.TradeService.Call:output_type -> trade.Empty
	2, // 7: trade.TradeService.TakeProfit:output_type -> trade.Empty
	2, // 8: trade.TradeService.StopLose:output_type -> trade.Empty
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_trade_proto_init() }
func file_trade_proto_init() {
	if File_trade_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_trade_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Trade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trade_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_trade_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_trade_proto_goTypes,
		DependencyIndexes: file_trade_proto_depIdxs,
		EnumInfos:         file_trade_proto_enumTypes,
		MessageInfos:      file_trade_proto_msgTypes,
	}.Build()
	File_trade_proto = out.File
	file_trade_proto_rawDesc = nil
	file_trade_proto_goTypes = nil
	file_trade_proto_depIdxs = nil
}
